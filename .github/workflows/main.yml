name: Deploy to GitHub Pages
on:
  push:
    branches: [main, master]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('package-lock.json') }}
          restore-keys: cypress-binary-
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          build: npm run build
          start: npm run dev
          wait-on: "http://localhost:5173"
        continue-on-error: true # Permite continuar incluso si los tests fallan
        id: cypress
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: steps.cypress.outcome == 'failure'
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
      - name: Fail the workflow if tests failed
        if: steps.cypress.outcome == 'failure'
        run: exit 1
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.vite
            dist
          key: build-${{ github.sha }}
          restore-keys: |
            build-
      - name: Build
        run: npm run build
        env:
          VITE_TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      - name: Create 404 page
        run: cp dist/index.html dist/404.html
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
      - name: Generate AI Deployment Report
        id: ai-report
        run: |
          echo "Generando reporte de despliegue..."
          cat > deployment-report.md << EOL
          # Informe de Despliegue Generado por IA

          ## Resumen del Despliegue

          **Fecha de Despliegue:** $(date '+%Y-%m-%d %H:%M:%S')
          **Commit ID:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}
          **Autor:** ${{ github.actor }}

          ## An√°lisis del Despliegue

          Este despliegue ha completado con √©xito las siguientes etapas:

          1. **Testing**: Pruebas automatizadas con Cypress
          2. **Build**: Compilaci√≥n de la aplicaci√≥n con Vite
          3. **Deploy**: Publicaci√≥n en GitHub Pages

          ## M√©tricas Clave

          | M√©trica | Valor |
          |---------|-------|
          | Tiempo Total | ${{ steps.deploy-time.outputs.time || 'No disponible' }} |
          | Estado | ‚úÖ Exitoso |
          | URL de Despliegue | https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }} |

          ## Recomendaciones

          - Revisar los videos y capturas de pantalla de las pruebas para verificar comportamiento visual
          - Realizar pruebas manuales adicionales en el sitio desplegado
          - Considerar implementar pruebas de rendimiento para futuras iteraciones

          ---

          *Este informe fue generado autom√°ticamente como parte del flujo de trabajo de CI/CD.*
          EOL

          echo "report=deployment-report.md" >> $GITHUB_OUTPUT
      - name: Commit and Push Report
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "docs: a√±adir informe de despliegue generado por IA"
          file_pattern: deployment-report.md
          branch: ${{ github.ref }}
