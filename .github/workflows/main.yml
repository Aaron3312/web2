name: Deploy to GitHub Pages
on:
  push:
    branches: [main, master]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('package-lock.json') }}
          restore-keys: cypress-binary-
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          build: npm run build
          start: npm run dev
          wait-on: "http://localhost:5173"
        continue-on-error: true # Permite continuar incluso si los tests fallan
        id: cypress
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: steps.cypress.outcome == 'failure'
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
      # Marca el job como fallido pero permite que contin√∫e el flujo de trabajo
      - name: Mark test job as failed
        if: steps.cypress.outcome == 'failure'
        run: echo "::warning::Cypress tests failed but workflow will continue"
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.vite
            dist
          key: build-${{ github.sha }}
          restore-keys: |
            build-
      - name: Build
        run: npm run build
        env:
          VITE_TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      - name: Create 404 page
        run: cp dist/index.html dist/404.html
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist
  report:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
        continue-on-error: true
      - name: Generate AI Performance Report
        uses: craigtaylordev/github-actions-ai-reporter@v1.0.1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          template-file: .github/report-templates/performance-template.md
          output-file: reports/performance-report.md
          include-test-results: true
          test-results-path: cypress/videos
          include-test-failures: true
        continue-on-error: true
      - name: Generate Code Quality Report
        uses: GitHubSecurityLab/actions-codeql-analysis-ai-summary@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          report-title: "AI Code Quality Analysis"
          report-path: reports/code-quality-report.md
        continue-on-error: true
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: ai-reports
          path: reports/
          if-no-files-found: warn
  deploy:
    needs: report
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: ai-reports
          path: dist/reports
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
